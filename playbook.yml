---
- hosts: all

  tasks:
  - file: path=~/bin state=directory mode=0755
  - file: path=~/.oh-my-zsh/themes state=directory mode=0755

  - name: ensure file exists
    copy:
      content: ""
      dest: ~/.work.zshrc
      force: no
      mode: 0755

 # Mac OS from here..
  - name: update brew
    when: ansible_os_family == "Darwin"
    homebrew: update_homebrew=yes

  - name: add Homebrew taps
    when: ansible_os_family == "Darwin"
    homebrew_tap: name={{item}}
    with_items:
    - homebrew/cask-fonts

  - name: install Homebrew casks
    when: ansible_os_family == "Darwin"
    homebrew_cask: name={{item}} install_options=appdir=/Applications
    with_items:
    - alfred
    - flycut
    - fellow
    - font-inconsolata
    - font-inconsolata-nerd-font
    - font-meslo-lg-nerd-font
    - google-cloud-sdk
    - istat-menus
    - ngrok
    - rectangle
    - tuple
    - visual-studio-code

  - name: install Homebrew packages
    when: ansible_os_family == "Darwin"
    homebrew:
      name: "{{item.name}}"
      install_options: "{{item.install_options}}"
      state: latest
    with_items:
    - {name: bat, install_options: ''}
    - {name: ctags, install_options: ''}
    - {name: chruby, install_options: ''}
    - {name: diff-so-fancy, install_options: ''}
    - {name: direnv, install_options: ''}
    - {name: fasd, install_options: ''}
    - {name: fd, install_options: ''}
    - {name: fzf, install_options: ''}
    - {name: gcc, install_options: ''}
    - {name: git, install_options: ''}
    - {name: git-extras, install_options: ''}
    - {name: glances, install_options: ''}
    - {name: go, install_options: ''}
    - {name: htop, install_options: ''}
    - {name: jq, install_options: ''}
    - {name: kind, install_options: ''}
    - {name: kubectx, install_options: ''}
    - {name: kubernetes-cli, install_options: ''}
    - {name: kubernetes-helm, install_options: ''}
    - {name: libgit2, install_options: ''}
    - {name: mr, install_options: ''}
    - {name: neovim, install_options: ''}
    - {name: node, install_options: ''}
    - {name: openssl, install_options: ''}
    - {name: pcre, install_options: ''}
    - {name: pstree, install_options: ''}
    - {name: ripgrep, install_options: ''}
    - {name: ruby-install, install_options: ''}
    - {name: shellcheck, install_options: ''}
    - {name: the_silver_searcher, install_options: ''}
    - {name: tig, install_options: ''}
    - {name: tmate, install_options: ''}
    - {name: tmux, install_options: ''}
    - {name: tree, install_options: ''}
    - {name: watch, install_options: ''}
    - {name: wget, install_options: ''}
    - {name: yarn, install_options: ''}
    - {name: yq, install_options: ''}


# Mac OS end here.

# Linux from here..

  - name: add diff-so-fancy-package
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.apt_repository:
      repo: 'ppa:aos1/diff-so-fancy'

  - name: update apt cache
    when: ansible_os_family == "Debian"
    become: yes
    apt: update-cache=yes

  - name: install base dependencies
    when: ansible_os_family == "Debian"
    become: yes
    apt: pkg={{ item }} state=latest
    with_items:
    - build-essential
    - ctags
    - curl
    - direnv
    - fasd
    - fzf
    - git-core
    - git-extras
    - glances
    - htop
    - jq
    - libexpat1-dev
    - libssl-dev
    - neovim
    - python3-apt
    - python3-pip
    - python3-pycurl
    - python3-setuptools
    - python3-software-properties
    - ripgrep
    - tig
    - tree
    - watch
    - yarn

  - name: install oh-my-zsh
    when: ansible_os_family == "Debian"
    become: true
    ansible.builtin.shell:
      cmd: curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh -s -- -y

# Linux end here.


  - name: get Tmux Plugin Manager
    git:
      repo: https://github.com/tmux-plugins/tpm
      dest: ~/.tmux/plugins/tpm

  - name: install support for nvim
    command: pip3 install --user --upgrade pynvim

  - name: install nvim distribution
    git:
      repo: https://github.com/luan/nvim
      dest: ~/.config/nvim

  - file: path=~/.config/nvim/lua/user state=directory mode=0755
  - name: symlinks
    file:
      path: "{{item.target}}"
      src: "{{item.src}}"
      state: link
      force: yes
    with_items:
    - {target: ~/.zshrc, src: "{{ansible_env.PWD}}/config/zsh/zshrc"}
    - {target: ~/.oh-my-zsh/themes/pairing.zsh-theme, src: "{{ansible_env.PWD}}/config/zsh/pairing.zsh-theme"}
    - {target: ~/.rubocop.yml, src: "{{ansible_env.PWD}}/config/ruby/rubocop.yml"}
    - {target: ~/.ruby-version, src: "{{ansible_env.PWD}}/config/ruby/ruby-version"}
    - {target: ~/.pryrc, src: "{{ansible_env.PWD}}/config/ruby/pryrc"}
    - {target: ~/.ansible.cfg, src: "{{ansible_env.PWD}}/config/ansible.cfg"}
    - {target: ~/.aliases, src: "{{ansible_env.PWD}}/config/zsh/aliases"}
    - {target: ~/.gitconfig, src: "{{ansible_env.PWD}}/config/gitconfig"}
    - {target: ~/.config/nvim/lua/user/before.lua, src: "{{ansible_env.PWD}}/config/nvim/before.lua"}
    - {target: ~/.config/nvim/lua/user/plugins.lua, src: "{{ansible_env.PWD}}/config/nvim/plugins.lua"}
    - {target: ~/.config/nvim/lua/user/after.lua, src: "{{ansible_env.PWD}}/config/nvim/after.lua"}
    - {target: ~/.config/nvim/coc-settings.json, src: "{{ansible_env.PWD}}/config/nvim/coc-settings.json"}
    - {target: ~/.tmux.conf, src: "{{ansible_env.PWD}}/config/tmux.conf"}
    - {target: ~/bin/load-key, src: "{{ansible_env.PWD}}/functions/load-key"}
    - {target: ~/bin/solo, src: "{{ansible_env.PWD}}/functions/solo"}
    - {target: ~/bin/take, src: "{{ansible_env.PWD}}/functions/take"}
    - {target: ~/bin/ssh-pass, src: "{{ansible_env.PWD}}/functions/ssh-pass"}
