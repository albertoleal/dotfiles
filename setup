#!/bin/bash -e

[[ -z "$DEBUG" ]] || set -x

usage() {
  echo "usage: setup COMMAND"
  echo
  echo "where COMMAND may be:"
  echo "links         -- updates symlinks"
  echo "functions     -- updates references to functions"
  echo "vim           -- installs/configures vim"
  echo "scripts       -- executes all instalation scripts"
  echo "everything    -- executes all the command above"
}

main() {
  local command

  if [[ -z $1 ]]; then
    usage
  fi

  command="$1"
  shift

  case $command in
    links )
      echo "Loading symlinks"
      load_symlinks "$@"
      ;;

    functions )
      echo "Loading functions"
      load_functions "$@"
      ;;

    scripts )
      echo "Loading installation scripts"
      scripts "$@"
      ;;

    vim )
      echo "Installing and configuring vim"
      install_vim "$@"
      ;;

    everything )
      echo "Configuring environment"
      everything "$@"
      ;;

  esac
}

load_symlinks() {
  for file in $(find `pwd` -name "*.symlink"); do
    destination="$HOME/.`basename \"${file%.*}\"`"

    # Create a backup if file exists
    if [[  -f "$destination" ]] || [[ -L "$destination" ]]; then
      mv "$destination" "${destination}.backup"
    fi

    ln -s  "$file" "$destination"
    success "Linked $file to $destination"
  done
}

load_functions() {
  local destination fns
  destination="/usr/local/bin"
  fns="$(pwd)/functions"

  for file in $(ls $fns); do
    rm -rf "/usr/local/bin/$file"
    ln -s "$fns/$file" "$destination"
    success "Linked $file to $destination"
  done
}

install_vim() {
  git submodule update --init --recursive
  sh -c vim/vimfiles/install
}

scripts() {
  for file in $(find `pwd` -maxdepth 3 -name "install"); do
    sh -c $file
  done
}

everything() {
  load_symlinks
  scripts
  load_functions
  install_vim
}

success () {
   printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s \n" "$1"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] %s \n" "$1"
  echo ''
  exit
}

main "$@"
